buildscript {
    ext.versions = [
            'minecraftCommons': '1.0.0',
            'enjinSdk'        : '1.0.0',
            'kyoriText'       : '3.0.2',
            'kyoriTextAdapter': '3.0.3',
            'gson'            : '2.8.0',
            'spigot'          : '1.13.2-R0.1-SNAPSHOT',
            'placeholderApi'  : '2.10.3',
            'sqlite'          : '3.28.0',
            'sentry'          : '1.7.27',
            'pusher'          : '2.0.1',
            'okhttp'          : '4.3.1',
            'retrofit'        : '2.7.1',
            'nbtapi'          : '2.3.0'
    ]

    ext.deps = [
            'minecraftCommons'        : "com.enjin:spigot-commons:${versions.minecraftCommons}",
            'enjinSdk'                : "com.enjin:blockchain-sdk:${versions.enjinSdk}",
            'kyoriText'               : "net.kyori:text-api:${versions.kyoriText}",
            'kyoriTextLegacy'         : "net.kyori:text-serializer-legacy:${versions.kyoriText}",
            'kyoriTextAdapterBukkit'  : "net.kyori:text-adapter-bukkit:${versions.kyoriTextAdapter}",
            'gson'                    : "com.google.code.gson:gson:${versions.gson}",
            'spigot'                  : "org.spigotmc:spigot-api:${versions.spigot}",
            'placeholderApi'          : "me.clip:placeholderapi:${versions.placeholderApi}",
            'sqlite'                  : "org.xerial:sqlite-jdbc:${versions.sqlite}",
            'sentry'                  : "io.sentry:sentry:${versions.sentry}",
            'pusher'                  : "com.pusher:pusher-java-client:${versions.pusher}",
            'okhttp'                  : "com.squareup.okhttp3:okhttp:${versions.okhttp}",
            'okhttpLoggingInterceptor': "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}",
            'okhttpUrlConnection'     : "com.squareup.okhttp3:okhttp-urlconnection:${versions.okhttp}",
            'retrofit'                : "com.squareup.retrofit2:retrofit:${versions.retrofit}",
            'retrofitGson'            : "com.squareup.retrofit2:converter-gson:${versions.retrofit}",
            'nbtapi'                  : "de.tr7zw:item-nbt-api:${versions.nbtapi}"
    ]

    ext.local = new Properties()
    File file = project.rootProject.file('local.properties')
    if (file.exists()) local.load(file.newDataInputStream())

    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
}

plugins {
    id 'io.freefair.lombok' version '3.8.3'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
    id 'com.bmuschko.nexus' version '2.3.1'
    id 'io.codearte.nexus-staging' version '0.21.0'
    id 'org.ajoberstar.git-publish' version '2.1.1'
}

allprojects {
    group = 'com.enjin.enjincraft'
    version = '1.0.0'

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/groups/public/' }
        maven { url "https://jitpack.io" }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven'
    apply plugin: 'io.freefair.lombok'
    apply plugin: 'com.bmuschko.nexus'
    apply plugin: 'com.github.johnrengelman.shadow'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    dependencies {
        compileOnly deps.sentry;
    }

    javadoc {
        dependsOn delombok
        source = delombok.target
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        archiveBaseName = jar.archiveBaseName
        archiveClassifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        archiveBaseName = jar.archiveBaseName
        archiveClassifier = 'sources'
        from sourceSets.main.allJava
    }

    shadowJar {
        archiveBaseName = jar.archiveBaseName
    }

    artifacts {
        archives javadocJar
        archives sourcesJar
        archives shadowJar
    }

    extraArchive {
        sources = false
        javadoc = false
        tests = false
    }

    nexus {
        sign = false
        repositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
        snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
    }

    gitPublish {
        repoUri = 'git@github.com:enjin/enjincraft.git'
        branch = 'gh-pages'
        contents {
            from(javadoc) {
                into '/'
            }
        }
        commitMessage = "Publishing documentation for version ${version}."
    }
}

nexusStaging {
    username = local.getProperty('nexusUsername')
    password = local.getProperty('nexusPassword')
}

wrapper {
    gradleVersion = '5.5.1'
    distributionType = Wrapper.DistributionType.ALL
}
